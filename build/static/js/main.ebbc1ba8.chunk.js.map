{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deletePerson","delete","Persons","persons","del","map","person","name","number","index","Person","onClick","Filter","filter","handleFilter","value","onChange","Form","addPerson","newName","handlePersonChange","newNumber","handlePhoneChange","onSubmit","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","personService","initialNotes","displayMessage","text","setTimeout","event","target","preventDefault","check","length","window","alert","confirm","per","find","n","changedPerson","returned","catch","error","personObject","returnedNote","concat","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebbc1ba8.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n// export default { getAll, create, update }\r\nconst exportedObject = {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n};\r\n\r\nexport default exportedObject;","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\nconst Persons = ({persons, del}) => {\n  return (\n    <>\n    {persons.map(person => <Person name={person.name} number={person.number} \n                                            key={person.id} del={del} index={person.id}/>)}\n    </>\n  )\n}\nconst Person = ({name, number, del, index}) => {\n  return (\n    <p> {name} {number} <button onClick={() => del(name, index)}> delete</button></p>\n  )\n}\n\nconst Filter = ({filter, handleFilter}) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={handleFilter}/>\n    </div>\n  )\n}\n\nconst Form = ({addPerson, newName, handlePersonChange, newNumber, handlePhoneChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handlePersonChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handlePhoneChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"msg\">\n      {message}\n    </div>\n  )\n}\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n    })\n  }, [])\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let check = persons.filter( person => (person.name === newName))\n    if (check.length !== 0 ) {\n      if (check[0].number === newNumber) {\n        window.alert(`${newName} is already added to phonebook`);\n      }\n      else {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one ?`)) {\n          const per = persons.find( n => n.name === newName)\n          const changedPerson = { ...per, number: newNumber}\n          personService\n            .update(per.id, changedPerson)\n            .then(returned => {\n              setPersons(persons.map(person => person.id !== per.id ? person : returned))\n            })\n            .catch(error => {\n              displayMessage(`The information of ${per.name} has already been removed from server`)\n            })\n          setNewName('')\n          setNewNumber('')\n          displayMessage(`The number of ${changedPerson.name} has been changed`)\n        }\n      }\n      } \n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n      .create(personObject)\n        .then(returnedNote => {\n        setPersons(persons.concat(returnedNote))\n        setNewName('')\n        setNewNumber('')\n        displayMessage(`Added ${personObject.name}`)\n        })\n        .catch(error => {\n          displayMessage(error.response.data.error)\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  const personsToShow = () => {\n    if (filter.length === 0) {\n      return persons\n    }\n    else {\n      return persons.filter(person => person.name.includes(filter))\n    }   \n  }\n\n  const del = (name, id) => {\n    if (window.confirm(`Delete ${name} ${id} ?`)) {\n      displayMessage(`${name} was deleted`)\n      personService.deletePerson(id)\n      setPersons(persons.filter(n => n.id !== id))\n    }\n  }\n\n  const displayMessage = (text) => {\n    setErrorMessage(text)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage}/>\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h2> Add a new</h2>\n      <Form addPerson={addPerson} newName={newName} handlePersonChange={handlePersonChange} \n            newNumber={newNumber}  handlePhoneChange={handlePhoneChange}/>\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow()} del={del}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}